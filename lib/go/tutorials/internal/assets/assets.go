// Code generated by go-bindata. DO NOT EDIT.
// sources:
// ../../../tutorials/01-hello-world/contracts/HelloWorld.cdc (754B)
// ../../../tutorials/01-hello-world/contracts/HelloWorldResource.cdc (1.254kB)
// ../../../tutorials/01-hello-world/scripts/script_01_call_reference_method.cdc (1.154kB)
// ../../../tutorials/01-hello-world/transactions/tx-02-getHelloResource.cdc (969B)
// ../../../tutorials/01-hello-world/transactions/tx_01_call_hello_method.cdc (957B)
// ../../../tutorials/01-hello-world/transactions/tx_03_create_capability.cdc (1.421kB)

package assets

import (
	"bytes"
	"compress/gzip"
	"crypto/sha256"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data, name string) ([]byte, error) {
	gz, err := gzip.NewReader(strings.NewReader(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %w", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)

	if err != nil {
		return nil, fmt.Errorf("read %q: %w", name, err)
	}

	clErr := gz.Close()
	if clErr != nil {
		return nil, clErr
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes  []byte
	info   os.FileInfo
	digest [sha256.Size]byte
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var __01HelloWorldContractsHelloworldCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x91\x4f\x8b\xdb\x30\x10\xc5\xef\x81\x7c\x87\x97\x3d\xed\x42\x6b\xdf\x03\x3d\x94\x96\xa5\xc7\x42\x03\x7b\x56\xe4\xb1\x2d\x18\xcf\xb8\xd2\x88\xe0\x2e\xf9\xee\x45\xb6\x93\xb8\x7f\x0c\x06\xcb\x9a\x79\xef\xf7\x66\xea\x1a\xdf\x88\x59\xdf\x34\x72\x53\xf9\xc6\xef\x77\x75\x5d\x5e\xbc\x11\x7b\x1d\x08\xa6\xf8\xe2\x1a\x12\x4f\x07\x9c\xfa\x90\x10\x12\x54\x08\xda\xc2\x7a\x42\x0a\xc3\xc8\x94\x0c\x63\xd4\x2e\xba\x21\x61\xd2\x0c\xef\x04\x0d\x8d\xac\x13\x54\xf0\xca\x7a\xa9\xee\xc2\xa7\x9e\x36\x9e\xf0\x2a\x16\x9d\xb7\xf9\xc3\x05\x49\x70\x48\x41\x3a\x26\x24\x8b\x41\x3a\xb4\x81\xb8\x81\x93\x06\x0e\x63\x3e\x73\xf0\xe8\xc8\x8c\x22\xda\x2c\xde\x82\xca\x43\xfc\x55\x99\xf5\x32\x93\x3d\xcd\x26\x1f\x30\xdb\x1c\x9e\x60\xd9\x34\x06\xc7\x25\x11\x93\x8b\x82\x41\x23\x1d\xd1\x9b\x8d\xe9\x58\xd7\x8d\xfa\x54\xa9\xb4\x05\x56\x63\x37\x9f\xeb\xbe\x68\x7c\xbc\x14\x89\xfd\x6e\xbf\x1b\xf3\xf9\x01\xbc\x09\xf1\x5e\x2e\x01\xa0\xae\xf1\x95\x3c\xbb\x48\x0f\xd8\x85\xbf\xcc\x6b\x1a\x09\x3f\xe6\x50\xd5\xad\xfc\xde\xf6\x99\x79\xa9\x4c\x18\x72\x32\x9c\x09\x41\x82\x05\xc7\xe1\x17\x35\x08\x32\x87\x2a\xbf\x9e\x5f\xb6\xc1\x4b\x7b\xc1\x62\x32\x74\x91\xc8\x82\x74\xc7\xd5\x65\x43\x75\xfa\xb7\xb9\x6c\x32\xd2\xcf\x1c\x62\xd1\x5f\xd6\xf9\x9f\x6d\xc8\xb4\x72\xad\x66\xab\xca\xfb\x72\x2a\x4f\x22\x6e\xab\x9b\x37\x3e\xfd\x3d\xf9\xa5\xf0\xba\x81\xf9\xbe\x0e\xe6\x06\x62\xbd\x33\x44\xb2\x1c\x25\x41\x73\x44\x1b\x03\x49\xc3\xd3\x3d\xd1\xe1\x11\xb4\xcd\x82\x79\x2d\xcf\x2f\xb7\x9c\x5b\x98\x45\xe6\x4f\xa6\x3b\xc1\x75\xbf\xfb\x1d\x00\x00\xff\xff\x5f\x80\xa3\xd4\xf2\x02\x00\x00"

func _01HelloWorldContractsHelloworldCdcBytes() ([]byte, error) {
	return bindataRead(
		__01HelloWorldContractsHelloworldCdc,
		"01-hello-world/contracts/HelloWorld.cdc",
	)
}

func _01HelloWorldContractsHelloworldCdc() (*asset, error) {
	bytes, err := _01HelloWorldContractsHelloworldCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "01-hello-world/contracts/HelloWorld.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xdb, 0x2a, 0x21, 0x30, 0x1b, 0xe0, 0xc6, 0x41, 0x2a, 0x79, 0x46, 0x50, 0x74, 0xd7, 0xe8, 0xaa, 0x48, 0x6c, 0x82, 0xa6, 0x37, 0xdd, 0x6d, 0xbc, 0x26, 0x7b, 0x45, 0xda, 0x4f, 0x25, 0x43, 0xaa}}
	return a, nil
}

var __01HelloWorldContractsHelloworldresourceCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x93\xcf\xae\xda\x3c\x10\xc5\xd7\x20\xf1\x0e\xf3\xb1\x02\x09\xe2\x3d\xba\x9b\xab\xaf\x8b\xbb\xe8\xaa\x7f\x74\xd7\xc6\x99\x10\x4b\x66\x26\xf5\x8c\x2f\x42\x55\xdf\xbd\x1a\x93\x00\x69\xa5\x22\x65\x01\x19\xff\x7c\xce\x99\x83\x73\xf0\x86\x29\xf1\x3b\xe7\xd4\x7e\x41\xe1\x92\x03\x36\xa1\x0d\xab\xa5\x73\xf6\xc0\xb7\x3e\x0a\x44\x01\x0f\x1f\x3e\x47\xaf\x91\x09\xb8\x03\xed\xf1\xe9\x24\x04\x26\xcd\x3e\x28\x68\xef\x15\x22\x69\xe6\xb6\x04\x94\x3a\x17\x98\x02\x0e\x0a\xdc\x55\x62\x1e\xaf\x91\x1d\x78\x20\xbc\x40\xc7\xf9\x6c\xcc\x14\x09\x7d\x06\xbd\x0e\x38\x72\x04\x0a\xc5\x1f\x05\x41\x19\xfe\xf7\x2d\x52\xc0\x06\x26\x99\x02\xc1\x13\x1c\xb1\x42\x8b\x60\x6b\x53\x21\xa3\x57\x04\x0f\x82\xa1\x64\x84\x33\xb7\x98\x0c\xde\xc6\x53\x54\x9f\x80\x2f\x84\x59\xfa\x38\x34\x77\x8b\x9f\xd1\x67\x82\x33\x67\x04\x7f\xe4\xa2\x0f\x85\x10\x09\xd4\x02\xd0\xa2\x9c\xa3\x4f\x07\xe8\x55\x07\x39\x38\xd7\x72\x90\x86\xa9\x4b\x7c\x69\x38\x9f\xea\x77\xd7\x5b\x22\xfb\x8b\x45\xb2\x5a\xae\x96\x43\x39\x3e\x92\x79\x4a\xeb\xa7\xbd\x04\x00\x70\x0e\x3e\x61\x48\xde\x6e\xbe\xdf\x7a\xf3\xce\x94\xae\x10\x29\xa4\xd2\xa2\x00\x13\x42\x57\x28\x58\xfc\xcd\x6a\xb9\x30\xf2\x7d\xbe\x92\x5f\x45\x50\x8d\x0c\xe3\xc7\x39\x78\x05\xcd\x9e\xc4\xd7\x63\x35\xad\xe0\x53\xba\x39\x9a\x68\x16\xda\x09\xb5\x2e\x6a\x5d\x49\x3b\xa8\x2a\xff\x5b\xcf\x58\x67\x14\xf1\x27\x84\x2e\xf3\xb9\x0e\x4f\xd7\x9b\x9c\xaa\xa7\x2b\x04\x35\x80\xcd\xf6\x00\x5f\x35\x47\x3a\x99\x9e\xc5\x62\x91\x51\x4b\xa6\xbf\xf1\x8b\xc5\xaf\xd5\xd2\x9e\xd5\x72\x11\x29\xea\x66\xfb\x87\x81\xef\x82\xb7\x06\xdd\xb6\x7a\x2c\x31\xe9\x3e\xd2\x4c\xfc\x7d\xe3\x56\xa5\x48\xa2\x9e\x02\xce\x28\xcf\x75\xbd\xc5\x34\x69\x7f\x8c\x25\x54\x03\xd4\x19\x78\xd9\x4f\xd4\xc7\x99\xcd\x76\x5a\xda\x48\x7d\xc7\x9a\x68\xcb\xe0\xe9\xaa\xbd\xb9\xad\x6d\x41\x30\x2b\x77\x89\xbb\x71\x89\xf6\xde\x87\x80\x22\x91\x4e\x33\x90\x1d\x11\xe5\x6c\xe9\x8e\x52\x7d\x08\x5c\x68\xfc\x37\xd5\x75\xdd\x6b\x14\x05\x5a\x1c\x12\x5f\x6b\xdf\x9b\x67\xd2\x8c\xfa\x86\x19\xe1\x82\x60\xdd\x32\xba\xdd\x6f\x68\xc2\x4b\xba\x8e\xf6\xda\x7f\x67\xe2\xdc\xe4\x68\xc8\xf1\xa3\x86\x3c\xea\x1a\xe5\xce\x46\x8f\x57\x90\x01\x43\xec\xae\xd5\x2a\x84\x22\xca\x67\x18\xbc\xf6\xb6\xa6\xe7\xca\xd8\xe6\x05\x53\xd7\x8c\xbc\x46\xfc\x07\x6e\x5e\xf6\xd3\x02\x76\xa0\x7c\x00\x37\xde\xe2\xea\x6f\xb3\xf8\x13\x9f\x36\xeb\x27\xed\x93\x1d\x4f\x6d\xd5\x86\xed\x7a\x7b\x6b\x56\x2d\xd7\xef\x00\x00\x00\xff\xff\xab\xb7\x4f\xf9\xe6\x04\x00\x00"

func _01HelloWorldContractsHelloworldresourceCdcBytes() ([]byte, error) {
	return bindataRead(
		__01HelloWorldContractsHelloworldresourceCdc,
		"01-hello-world/contracts/HelloWorldResource.cdc",
	)
}

func _01HelloWorldContractsHelloworldresourceCdc() (*asset, error) {
	bytes, err := _01HelloWorldContractsHelloworldresourceCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "01-hello-world/contracts/HelloWorldResource.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x44, 0x57, 0xf4, 0xb, 0x7a, 0x22, 0xdf, 0xa4, 0xde, 0x56, 0x8e, 0xf1, 0x89, 0xf6, 0xc8, 0xc7, 0x1, 0x51, 0xc0, 0x25, 0xc2, 0xf9, 0x8c, 0xf3, 0x0, 0x20, 0xce, 0x5e, 0xd, 0xc0, 0xa8, 0x84}}
	return a, nil
}

var __01HelloWorldScriptsScript_01_call_reference_methodCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x93\xcf\x6e\xd4\x30\x10\xc6\xef\x95\xfa\x0e\x1f\x7b\xa0\xbb\x07\x92\xc2\x11\x51\xaa\x55\x0f\xf4\x0c\x48\x9c\x27\xce\x24\x31\x72\x3c\x91\x3d\xee\x76\x85\x78\x77\x64\x67\x77\x93\x16\x24\x72\x8a\x3d\xf3\xcd\xfc\xe6\x8f\xeb\x1a\xdf\x4c\xb0\x93\xbe\xaf\x4c\x6b\xae\xaf\xae\xaf\xec\x38\x49\x50\x3c\xb2\x73\xf2\x43\x82\x6b\xd1\x05\x19\x71\xfb\x7c\xfb\x21\x9b\xeb\x1a\x7b\xc4\x22\x81\x8d\x20\xc4\x89\x8d\x25\x07\x3d\x4e\x0c\xe9\xf0\x40\x2d\x7b\xc3\xd0\x40\x3e\x92\x51\x2b\xbe\xa8\x74\x20\x45\x2b\x1c\xe1\x45\x31\xd0\x13\x83\x8c\xe1\x18\xa1\x02\xf2\xc7\x7c\x92\xe4\xf5\x26\x22\xaa\x04\xea\xb9\xc8\xc8\xb7\x30\xe4\xb3\x66\x94\xd6\x76\x47\x44\x25\xe5\x0a\x7b\x7f\xfa\x85\x19\xc8\xf7\x1c\xe7\x0c\x56\x71\x90\xe4\xda\x22\x6e\x05\x14\x18\x81\x9f\x38\x28\xb7\xa0\x4e\x39\x80\x9f\xd9\xa4\xcc\x55\x65\xa7\xe2\x38\xf7\x20\x62\x4c\xf1\xc4\xa6\x03\xa3\x13\xe7\xe4\x60\x7d\x8f\x68\x7b\x4f\x9a\x02\x7f\xc4\x94\x1a\x74\xc9\x63\x24\xeb\xb7\xbb\xff\x74\xeb\xa5\x33\x7e\xe5\x3b\x00\xa8\xeb\x4b\x9f\x8c\xb4\x9c\x2b\x44\xcf\x0a\xf2\xab\x36\x4c\xa9\x71\xd6\x9c\x2f\x20\xcd\x4f\x36\x7a\xd1\x37\x47\xa4\x98\xd9\x32\x69\xcf\xba\x9f\xdd\xb6\x3b\x34\xc9\x3a\x7d\x67\x7d\xce\x6c\x4e\x75\x66\x91\x63\xc5\x90\x41\x4f\xae\xb8\x5b\xeb\x32\xf2\x6e\xc5\xf7\x85\xb5\x84\x3e\x51\x18\x9a\xa8\xb1\xce\xea\x71\xae\x70\x65\x9a\x48\x87\x3c\xf9\x7c\x25\x07\xcf\xe1\x26\x9e\xa1\x5f\x25\x7e\x58\x82\xdc\xbd\x40\xa9\x7a\xd6\xc5\xb8\xad\xe7\xc8\x75\x69\xeb\x1a\xaa\x91\x10\xe4\x00\x42\xe0\x8e\x43\xe9\x5f\x27\xa1\x64\x5e\x00\x5f\x25\xfd\x7a\x71\xbd\x7b\x4d\xf1\xa6\x9a\x03\x7e\x7a\xbb\x0c\xb0\x2a\xbf\xfb\x18\x59\x3f\x6f\x77\x73\xac\xfc\xdd\xdf\x63\x22\x6f\xcd\x76\xf3\x90\xf7\xab\x6c\xf1\x3f\x70\x54\x0a\x4d\x49\xb4\x62\xda\xac\xab\xf8\x3e\x30\x9c\xf4\x7f\x0f\x2a\xdf\x46\x58\x8d\xa0\xd0\xa7\x91\xbd\xe6\x78\x51\x5b\x49\x5a\x9d\xe5\x97\x30\x8f\x1c\x18\x07\x2e\x2b\x3e\xaf\x82\x4c\x39\x0a\xb9\xfc\x24\xac\x2f\xcb\x91\x21\x9c\x2b\x4c\x9b\x02\xb5\xb9\xe8\x47\xd6\x41\x5a\x88\x2f\xd6\xa5\x6c\x04\x8e\x92\x42\x2e\xa6\xbc\xa8\xb8\x94\xd7\x5e\xc4\xd6\x2f\x2b\x10\x87\xfc\xb6\x02\xd3\x79\x0b\x4e\xd3\x3f\xef\x9d\xf4\xdb\x97\x93\xa8\xca\x71\xbb\xdb\x5d\x5f\xfd\xfe\x13\x00\x00\xff\xff\xa3\x80\x3f\x09\x82\x04\x00\x00"

func _01HelloWorldScriptsScript_01_call_reference_methodCdcBytes() ([]byte, error) {
	return bindataRead(
		__01HelloWorldScriptsScript_01_call_reference_methodCdc,
		"01-hello-world/scripts/script_01_call_reference_method.cdc",
	)
}

func _01HelloWorldScriptsScript_01_call_reference_methodCdc() (*asset, error) {
	bytes, err := _01HelloWorldScriptsScript_01_call_reference_methodCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "01-hello-world/scripts/script_01_call_reference_method.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x41, 0x60, 0x27, 0xb5, 0xaa, 0xb4, 0xe8, 0x38, 0xff, 0x69, 0x69, 0x14, 0x49, 0x3d, 0x47, 0x89, 0x4e, 0xf9, 0x59, 0x17, 0x49, 0xe4, 0x3b, 0x7, 0x86, 0xc3, 0x74, 0xae, 0x4, 0x85, 0xf8, 0xf8}}
	return a, nil
}

var __01HelloWorldTransactionsTx02GethelloresourceCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x52\xc1\x6e\xda\x40\x10\xbd\x23\xf1\x0f\x2f\xb9\xd4\x48\x01\x47\x39\x46\xa8\x29\xb7\xf6\x56\x55\x95\x72\xcd\xb0\x1e\xf0\xb6\xf6\x8e\xb5\x3b\x26\x41\x55\xfe\xbd\x9a\x35\xc4\x18\x85\x0b\xda\x9d\xf7\xde\xbe\x37\xcf\x65\x89\xdf\x91\x42\x22\xa7\x5e\xc2\xc3\xca\x55\x6e\x3e\x9b\xcf\x7c\xdb\x49\x54\x7c\xe7\xa6\x91\x67\x89\x4d\x85\x5d\x94\x16\xf7\x6f\xf7\x0f\x36\x36\x56\xed\x13\x74\xa4\xc2\x51\xd3\x24\x68\xcd\xb8\xad\x8d\x76\x8b\x96\xb5\x96\x0a\x12\xf2\x6d\xd6\xda\xa4\xc4\x0a\xd9\xfe\x61\xa7\x59\x46\x6b\x52\xf8\x84\xa4\x12\xb9\x82\x1f\xb0\xe4\x9c\xf4\x41\xbf\x0c\xf7\xb4\x67\x6c\x8f\x88\xdc\xca\xc1\x87\xfd\xc0\xb9\xd0\xc8\xd6\x4e\xc0\xbb\xec\x63\x40\xf1\xc9\xc1\x1d\x28\x54\x76\x0e\xe8\x7a\x55\x1b\x7a\xc5\x96\xdc\x5f\x7b\xef\x44\xb4\x58\x97\x71\xfe\xd9\x05\x00\x74\x91\x3b\x8a\x5c\x90\x73\xfa\x88\x4d\xaf\xf5\x66\x70\xb7\x18\x31\xf6\x2b\x4b\x34\x42\xf9\x1d\x44\x4e\xd2\x47\xc7\x57\xd6\x52\xc7\xce\xef\x8e\x67\x77\x7a\xec\x18\x2a\x03\xcd\x2b\x28\x4d\xd4\x4e\xa6\xd1\x91\xd6\x78\xad\x39\xb2\x81\x3e\x76\x35\x62\x1b\x56\xe4\x95\xff\x3a\x3f\xbb\x5e\xda\x0a\x75\x65\xca\xeb\x6f\x63\x8b\xab\xb1\x84\xaf\x85\x79\x7b\x44\x79\x72\x57\xe6\xd1\xe2\x2a\xd1\x33\xa3\x4f\x0c\xe9\x6c\x27\xd4\xc0\xd5\xe4\x83\xf9\x2f\x9e\x16\xd8\xb2\x23\x9b\x9a\xc9\x03\x35\x3d\x4f\xd6\x79\xa1\xd2\xd2\x11\x12\xf3\x5f\x10\x05\xbf\xf9\xa4\xe7\x52\xfa\x64\x91\x9c\x84\xe4\x2b\xb6\x4f\xe0\xfc\xd6\xea\x22\xa0\xec\x8b\x49\xc0\xa7\x55\x3e\x16\x8b\x6b\xbf\x3f\x7b\x9d\x16\x70\xd5\x32\x68\x98\x27\x6a\x19\xa9\x13\xfd\x2c\xad\x01\x76\x12\x1d\x2f\xfb\xf0\x1a\xa9\x83\x74\x1c\x49\x25\xe2\xe5\xe6\xc5\x0a\xdb\xb3\x8e\xa1\x27\x0a\xd2\x2b\x64\x97\x87\x1f\x39\xf0\x43\x41\x5b\x89\x9a\xe0\xa7\x23\x4b\x1e\x7c\x33\x2a\xe4\xd2\x12\x1d\xb8\x58\x2f\x27\x81\x6f\xee\xa0\xf2\x49\x59\x46\x7a\x9f\xcf\xde\xe7\xb3\xff\x01\x00\x00\xff\xff\xe7\x6e\x39\xdf\xc9\x03\x00\x00"

func _01HelloWorldTransactionsTx02GethelloresourceCdcBytes() ([]byte, error) {
	return bindataRead(
		__01HelloWorldTransactionsTx02GethelloresourceCdc,
		"01-hello-world/transactions/tx-02-getHelloResource.cdc",
	)
}

func _01HelloWorldTransactionsTx02GethelloresourceCdc() (*asset, error) {
	bytes, err := _01HelloWorldTransactionsTx02GethelloresourceCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "01-hello-world/transactions/tx-02-getHelloResource.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x23, 0xda, 0xe9, 0xe3, 0x1d, 0xd9, 0x39, 0x1d, 0x2b, 0xe2, 0x47, 0xfb, 0x16, 0x12, 0x21, 0xb, 0xf5, 0x1b, 0x24, 0x46, 0x4b, 0xcc, 0x4a, 0x98, 0xc6, 0x39, 0xe4, 0x9b, 0x5b, 0x11, 0xda, 0xfc}}
	return a, nil
}

var __01HelloWorldTransactionsTx_01_call_hello_methodCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x53\xbd\x6e\xe3\x4c\x0c\xac\x6d\xc0\xef\x40\xa4\x4a\x80\xc0\x4e\xda\x74\xe9\xbe\xaf\xb9\xe6\x02\x5c\x4d\x73\x69\xed\xc2\xeb\xa5\x40\x52\x51\x84\x20\xef\x7e\xd8\x95\xfc\x93\x5c\x27\x88\xc3\x99\xe1\x90\xbb\xdb\xc1\x9b\x62\x31\x24\x4f\x52\x9e\xb7\x14\x68\xb3\xde\xac\xd3\xa9\x17\x75\xf8\x8f\x73\x96\x3f\xa2\x39\xc0\x41\xe5\x04\x4f\x1f\x4f\xcf\xb5\xfc\xbd\xcb\x00\x95\x21\x30\x65\x54\x0e\x30\x26\x8f\xe0\x91\xe1\xce\xaf\x98\x3b\x38\xf2\x34\x8a\x86\x6d\xed\x9e\x19\x22\x4f\x10\xf1\x9d\xc1\xa3\x32\x43\x2f\x66\x69\x9f\x19\xcc\xb1\x63\x7b\xb9\x00\x7b\xe5\x1e\x95\x5f\xe0\x2d\x26\x83\x7d\x16\x3a\x42\x44\x83\xc3\x90\x33\x20\x11\x9b\x81\x4b\x93\x44\x22\x19\x8a\x1b\x78\x44\x07\x4b\x5d\xe1\xd0\x38\x6a\xf1\xc6\xce\x76\xe6\x4a\x06\x63\x64\x65\x50\x36\x19\x94\xd8\xc0\xa2\x0c\x39\xc0\xbe\xda\x10\xe5\xf0\x08\xca\x27\x79\xe7\xf0\xd8\x78\x44\x61\x30\x0e\x55\x8f\x94\xd1\x6b\xeb\x81\x95\x0b\xb1\x5d\x47\xe3\x0f\xa6\xc1\xcf\x8e\x93\x35\xf9\x13\xa6\x02\x3d\xaa\x83\x1c\x7e\xfa\x01\x2c\x01\x92\x5d\xac\xb6\x08\x16\x6f\x87\xa1\xcc\x18\xc2\x9c\xad\x21\xe7\x2f\x17\xe0\x0f\x67\x2d\x98\x5b\x23\x49\x71\x45\xf2\x19\xf3\xcf\x48\x42\x34\xe8\xd5\x63\x2f\xe6\xdf\x22\xad\xed\x98\x8a\x81\xf4\x55\x0e\x73\x83\x90\x94\x90\x66\xf9\xc8\x74\x5c\x92\x25\x2c\x35\xa2\x25\x8a\xc6\xf7\xce\x9a\x0e\xd3\x5c\xfe\x39\xdd\x88\x76\xce\x24\x00\x89\x2a\x93\xe7\x69\x5b\x4f\xe9\x16\xf6\x59\x7f\x00\x00\xec\x76\xf0\x4b\xa0\xf0\x1c\x74\x10\xc0\x32\x79\x4c\xa5\x83\x1a\xe1\x7c\x0e\xb0\x67\xc2\xc1\x18\x46\x6e\xf7\x57\xc4\x61\x14\x3d\x56\x54\x3d\xc1\x0b\xd3\x72\x13\x6d\x9f\xd8\xf1\x76\xb3\x5e\x2d\x14\xf7\x48\xe4\x2f\xf0\x3a\x78\x7c\x9d\x41\x0f\xf0\xf9\x75\x63\xe2\xff\x72\xb6\xfd\x58\x65\x2c\x9d\xfa\x3c\xb5\xf4\xdb\x88\xb1\x3e\x8f\xcb\x7e\x2e\x5d\xcb\x7a\x6f\x1e\xcf\x79\x33\x6d\x31\x59\xba\x56\x57\xf6\x41\x0b\x07\xf8\xed\x9a\x4a\x57\x7d\x2d\x62\x35\x88\x15\xc0\x2a\x4b\x77\x7f\x65\xd9\x36\xb9\xfb\x87\x87\xcd\x7a\xf5\xb5\x59\x7f\x6d\xd6\x7f\x03\x00\x00\xff\xff\x13\x6a\x79\x3d\xbd\x03\x00\x00"

func _01HelloWorldTransactionsTx_01_call_hello_methodCdcBytes() ([]byte, error) {
	return bindataRead(
		__01HelloWorldTransactionsTx_01_call_hello_methodCdc,
		"01-hello-world/transactions/tx_01_call_hello_method.cdc",
	)
}

func _01HelloWorldTransactionsTx_01_call_hello_methodCdc() (*asset, error) {
	bytes, err := _01HelloWorldTransactionsTx_01_call_hello_methodCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "01-hello-world/transactions/tx_01_call_hello_method.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x9e, 0x22, 0x98, 0xb3, 0x1e, 0xa8, 0xb7, 0x19, 0xa3, 0x9b, 0x76, 0x27, 0x5f, 0x53, 0xca, 0xee, 0xb1, 0x75, 0x74, 0xf6, 0x1d, 0xbd, 0x99, 0x34, 0xd2, 0xa7, 0x2e, 0xb4, 0x30, 0x82, 0xa4, 0x92}}
	return a, nil
}

var __01HelloWorldTransactionsTx_03_create_capabilityCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x54\x4d\x6b\x1b\x31\x10\xbd\x1b\xfc\x1f\x5e\x7d\x68\x6c\x08\xeb\xd0\xde\x42\x53\x13\x72\x69\x4e\x85\xd2\x92\x6b\xb4\xda\xb1\x57\x89\x2c\x2d\x9a\x59\x3b\xa1\xe4\xbf\x97\xd1\x7e\x78\x1d\xd2\x9b\x57\x1a\xbd\x79\x6f\xde\x1b\xaf\xd7\xf8\x9d\x4c\x60\x63\xc5\xc5\xf0\xb5\xb0\x95\x9d\xcf\xe6\x33\xb7\x6f\x62\x12\xfc\x20\xef\xe3\x43\x4c\xbe\xc2\x36\xc5\x3d\xae\x5e\xae\xbe\xe8\xb5\xbe\xaa\x1d\x43\x4e\x4f\x61\x13\x19\x21\x86\x41\xa0\x23\xac\x69\x4c\xe9\xbc\x93\xd7\x5c\xbd\x8d\x09\x52\x53\x07\x78\xcb\x4c\x82\x44\x1c\xdb\x64\x09\x2e\x80\x25\x26\xb3\xa3\x5c\x6a\x42\x05\x53\x55\x0c\x27\x90\x98\x5f\x19\x6b\x63\x1b\xe4\x82\xd1\xb4\xa5\x77\x16\x26\x91\x29\xb4\x3a\xbf\xf8\x29\x35\xa5\xa1\x88\x33\x00\xdb\xe4\x1a\x61\x58\x13\xd0\x32\x41\x94\xed\x3b\x4e\x12\x7b\xce\x30\x48\xb4\xa5\x44\xc1\xd2\xd0\xb2\x49\xee\xa0\x57\xb1\x7c\x22\x9b\x89\x94\x04\x53\x7a\x2d\xe8\x68\x5a\x4b\xac\x24\x19\x5b\x47\xbe\xea\xfa\x5a\xe3\x7d\x3e\xdb\x93\xd4\xb1\xe2\x42\xa7\x35\x9d\xd2\xdf\xf9\x0c\x68\x12\x35\x26\xd1\xb2\xa7\x7c\x8d\xdb\x56\xea\xdb\xee\x63\xa5\x25\x5a\x04\xac\xd7\xb8\x1b\x08\xf6\xc2\x4f\x12\x50\xbe\xc2\xbb\xf0\xec\xc2\x2e\x13\x9e\xdc\x28\xc3\xfe\xbd\xc1\xa3\x98\xb4\x23\x79\x1c\x94\xb8\x30\x4c\xea\x34\xf5\xbe\x38\x5b\x5a\x45\x62\x84\x28\xb0\x35\xd9\x67\xb8\x6d\x46\xd7\x4e\x70\x8c\x83\xf1\xae\x42\x4c\xc3\x79\x07\x0e\x7a\x71\x2c\x2a\xb6\x47\xba\x17\x3c\xb5\x2c\x63\x26\xce\x09\x16\x93\x8e\x67\xc4\xd5\xa3\xfc\xa2\xea\x4c\x94\x98\xf4\xa7\x60\xdd\xc9\x5f\xe7\xf8\x5c\xe6\x4b\xc7\x27\x91\x9e\x23\x12\x49\x9b\x02\xf5\x41\xd5\x86\xdb\x36\xe4\x99\xf7\xed\x3c\xc9\xb4\xd7\xcd\x30\x86\x42\xb5\x7d\xfb\x7c\x8a\x7a\x71\x0a\xe9\xf7\xe5\xbb\xce\x9d\xde\x6b\xac\xfb\xd9\x75\xe7\xab\x89\x63\x7f\x72\xda\xa6\xb2\x2e\x18\x65\x4c\x29\x1e\xfb\x50\x9c\x05\x4f\x77\x65\x0c\xdf\x08\xd2\x87\x70\x08\x5f\x6d\xe4\xbd\xc7\x4a\x9a\xa7\x4e\x3f\x50\x0e\x7a\x6c\x54\xb2\xf1\xb0\xb5\x71\x41\xc3\xb1\xd8\x6c\x16\x0a\xa8\x3e\x29\xc8\xc1\xf8\x96\x50\x92\x35\x2d\x4f\x3a\x8e\x37\x47\xd2\xf5\xea\xf3\xad\x00\x4e\xa3\x3d\x02\x17\xb8\xef\xac\x1f\x3b\x39\x46\x70\xfe\xf2\x0c\xaa\x31\xc1\x59\x1c\x9d\xf7\xa8\x4d\xd3\x50\xc0\xd1\x49\x0d\x83\x8a\xba\xd5\x74\x07\x02\xa5\x14\x13\xf6\xc4\x3c\xa6\x50\x4d\xaa\x75\xa4\xbf\xc6\x85\xbc\x99\xc8\xfe\x54\x74\x93\x5c\xae\xba\x72\x60\xb3\xe9\x7a\x2d\x17\x77\xb1\xf5\x55\x4e\x6e\x3f\xed\x0f\xb6\x3a\x43\x4f\xf0\x16\x53\xe7\xee\x74\x77\x4f\x55\x43\x7c\xd0\xf2\xb0\x63\xff\x35\xea\x83\xbf\xb5\x31\xe4\xbd\xb0\xb8\x5b\x9e\x0b\x2b\xf2\xe7\x72\x95\xa5\xbc\xcd\x67\x6f\xf3\xd9\xbf\x00\x00\x00\xff\xff\xc4\xbf\x5a\x38\x8d\x05\x00\x00"

func _01HelloWorldTransactionsTx_03_create_capabilityCdcBytes() ([]byte, error) {
	return bindataRead(
		__01HelloWorldTransactionsTx_03_create_capabilityCdc,
		"01-hello-world/transactions/tx_03_create_capability.cdc",
	)
}

func _01HelloWorldTransactionsTx_03_create_capabilityCdc() (*asset, error) {
	bytes, err := _01HelloWorldTransactionsTx_03_create_capabilityCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "01-hello-world/transactions/tx_03_create_capability.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x28, 0xe3, 0x62, 0xf6, 0xe3, 0xdf, 0xa, 0x71, 0xed, 0xba, 0xf1, 0x9d, 0xa5, 0xc6, 0x31, 0x44, 0x56, 0x9a, 0x33, 0x36, 0x64, 0xe4, 0xe9, 0x96, 0x25, 0xcc, 0xb1, 0x36, 0xf2, 0xda, 0x1, 0xd4}}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetString returns the asset contents as a string (instead of a []byte).
func AssetString(name string) (string, error) {
	data, err := Asset(name)
	return string(data), err
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// MustAssetString is like AssetString but panics when Asset would return an
// error. It simplifies safe initialization of global variables.
func MustAssetString(name string) string {
	return string(MustAsset(name))
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetDigest returns the digest of the file with the given name. It returns an
// error if the asset could not be found or the digest could not be loaded.
func AssetDigest(name string) ([sha256.Size]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s can't read by error: %v", name, err)
		}
		return a.digest, nil
	}
	return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s not found", name)
}

// Digests returns a map of all known files and their checksums.
func Digests() (map[string][sha256.Size]byte, error) {
	mp := make(map[string][sha256.Size]byte, len(_bindata))
	for name := range _bindata {
		a, err := _bindata[name]()
		if err != nil {
			return nil, err
		}
		mp[name] = a.digest
	}
	return mp, nil
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"01-hello-world/contracts/HelloWorld.cdc":                    _01HelloWorldContractsHelloworldCdc,
	"01-hello-world/contracts/HelloWorldResource.cdc":            _01HelloWorldContractsHelloworldresourceCdc,
	"01-hello-world/scripts/script_01_call_reference_method.cdc": _01HelloWorldScriptsScript_01_call_reference_methodCdc,
	"01-hello-world/transactions/tx-02-getHelloResource.cdc":     _01HelloWorldTransactionsTx02GethelloresourceCdc,
	"01-hello-world/transactions/tx_01_call_hello_method.cdc":    _01HelloWorldTransactionsTx_01_call_hello_methodCdc,
	"01-hello-world/transactions/tx_03_create_capability.cdc":    _01HelloWorldTransactionsTx_03_create_capabilityCdc,
}

// AssetDebug is true if the assets were built with the debug flag enabled.
const AssetDebug = false

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"},
// AssetDir("data/img") would return []string{"a.png", "b.png"},
// AssetDir("foo.txt") and AssetDir("notexist") would return an error, and
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		canonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(canonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"01-hello-world": {nil, map[string]*bintree{
		"contracts": {nil, map[string]*bintree{
			"HelloWorld.cdc": {_01HelloWorldContractsHelloworldCdc, map[string]*bintree{}},
			"HelloWorldResource.cdc": {_01HelloWorldContractsHelloworldresourceCdc, map[string]*bintree{}},
		}},
		"scripts": {nil, map[string]*bintree{
			"script_01_call_reference_method.cdc": {_01HelloWorldScriptsScript_01_call_reference_methodCdc, map[string]*bintree{}},
		}},
		"transactions": {nil, map[string]*bintree{
			"tx-02-getHelloResource.cdc": {_01HelloWorldTransactionsTx02GethelloresourceCdc, map[string]*bintree{}},
			"tx_01_call_hello_method.cdc": {_01HelloWorldTransactionsTx_01_call_hello_methodCdc, map[string]*bintree{}},
			"tx_03_create_capability.cdc": {_01HelloWorldTransactionsTx_03_create_capabilityCdc, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory.
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively.
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(canonicalName, "/")...)...)
}
